plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.redfinterviews.foodtrucks"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeBetaVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {


    // core
    implementation "com.google.android.material:material:1.6.1"

    // androidX
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.browser:browser:1.4.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.exifinterface:exifinterface:1.3.3"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.core:core-splashscreen:1.0.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.fragment:fragment-ktx:1.5.2"
    debugImplementation("androidx.fragment:fragment-testing:1.5.2") {
        exclude group: "androidx.test", module: "core"
    }
    testImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.multidex:multidex-instrumentation:2.0.0"

    // kotlin
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.6.10"

    // Rx*
    def rxLifecycleVersion = "3.1.0"
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "com.uber.rxdogtag:rxdogtag:1.0.1"
    implementation "com.trello.rxlifecycle3:rxlifecycle:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle3:rxlifecycle-android:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle3:rxlifecycle-components:$rxLifecycleVersion"
    androidTestImplementation "com.squareup.rx.idler:rx2-idler:0.11.0"

    // okhttp
    def okHttpVersion = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // retrofit
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation("com.squareup.retrofit2:converter-protobuf:$retrofitVersion") {
        exclude group: "com.google.protobuf"
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"

    // dagger-hilt
    def daggerVersion = "2.42"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    //noinspection GradleDependency
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:hilt-android:$daggerVersion"
    testImplementation "com.google.dagger:hilt-android-testing:$daggerVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerVersion"
    kapt "com.google.dagger:hilt-compiler:2.43.2"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$daggerVersion"

    // viewModels & liveData
    def lifecycleVersion = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:2.5.1"

    // compose
    def composeVersion = "1.2.1"
    implementation "androidx.activity:activity-compose:1.5.1"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.animation:animation:$composeVersion"
    implementation "androidx.compose.ui:ui:$composeBetaVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeBetaVersion"
    implementation "androidx.compose.ui:ui-viewbinding:$composeVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"
    implementation "androidx.compose.runtime:runtime:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "com.google.maps.android:maps-compose:1.0.1"
    implementation "io.coil-kt:coil-compose:1.4.0"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeBetaVersion"

    // navigation
    def navigationVersion = "2.5.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"

    // gson
    implementation "com.google.code.gson:gson:2.8.9"

    // glide
    implementation "com.github.bumptech.glide:glide:4.13.0"

    // lottie
    implementation "com.airbnb.android:lottie:3.6.1"

    // eventbus
    implementation "org.greenrobot:eventbus:3.2.0"
    kapt "org.greenrobot:eventbus-annotation-processor:3.2.0"

    // arrow
    implementation "io.arrow-kt:arrow-core:1.0.1"

    // iterable
    implementation "com.iterable:iterableapi:3.3.0"

    // junit
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.json:json:20210307"

    // espresso
    def testVersion = "1.4.0"
    def espressoVersion = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$testVersion"
    androidTestImplementation "androidx.test:rules:$testVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "androidx.room:room-testing:2.4.3"
    androidTestUtil "androidx.test:orchestrator:1.4.1"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // mockito
    testImplementation "org.mockito:mockito-core:4.6.1"
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    androidTestImplementation "org.mockito:mockito-android:3.10.0"

    // powermock
    def powermockVersion = "2.0.9"
    testImplementation "org.powermock:powermock-core:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powermockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockVersion"
    testImplementation "io.mockk:mockk:1.12.3"
    androidTestImplementation "io.mockk:mockk-android:1.12.3"

    // roboelectric
    testImplementation("org.robolectric:robolectric:4.8.1") {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }
    testImplementation "org.robolectric:shadows-multidex:4.7.3"
}